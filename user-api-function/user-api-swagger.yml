openapi: 3.0.0
info:
  version: '1.0'
  title: ''
  description: ''
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/qss/user-api/1.0
paths:
  /users:
    get:
      summary: query all users
      operationId: getUsers
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
        '500':
          description: An error occured
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'
  /user:
    post:
      summary: add new user
      operationId: createUser
      requestBody:
        $ref: '#/components/schemas/User'
      responses:
        '201':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreatedResponse'
        '400':
          description: Mandatory fields missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MandatoryFieldsMissingResponse'
        '409':
          description: User already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExistingRecordResponse'
  /user/{id}:
    get:
      summary: query single users
      operationId: getUser
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
components:
  schemas:
    User:
      type: object
      required:
        - firstname
        - lastname
        - street
        - houseno
        - postalcode
        - city
        - email1
      properties:
        firstname:
          type: string
          example: "Jan"
        lastname:
          type: string
          example: "Janszen"
        prefix:
          type: string
        street:
          type: string
          example: "Dorpstraat"
        houseno:
          type: integer
          example: 14
        postalcode:
          type: string
          example: "9888AC"
        city:
          type: string
          example: "Ons Dorp"
        country:
          type: string
        phone1:
          type: string
        phone2:
          type: string
        email1:
          type: string
          example: "jan.janszen@example.com"
        email2:
          type: string
    UserResponse:
      type: object
      required:
        - firstname
        - lastname
        - street
        - houseno
        - postalcode
        - city
        - email1
      properties:
        firstname:
          type: string
          example: "Jan"
        lastname:
          type: string
          example: "Janszen"
        prefix:
          type: string
        street:
          type: string
          example: "Dorpstraat"
        houseno:
          type: integer
          example: 14
        postalcode:
          type: string
          example: "9888AC"
        city:
          type: string
          example: "Ons Dorp"
        country:
          type: string
        phone1:
          type: string
        phone2:
          type: string
        email1:
          type: string
          example: "jan.janszen@example.com"
        email2:
          type: string
        date_created:
          type: string
        date_modified:
          type: string
    UserCreatedResponse:
       type: object
       required:
       - id
       properties:
          id:
            type: number
            example: 1
    ServerErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: 'Unexpected error occured.'
    NotFoundErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: 'User not found.'
    InvalidRequestResponse:
      type: object
      properties:
        message:
          type: string
          example: 'Invalid id (abc) supplied.'
    ExistingRecordResponse:
      type: object
      properties:
        message:
          type: string
          example: 'User already exists.'
    MandatoryFieldsMissingResponse:
      type: object
      properties:
        message:
          type: string
          example: 'One or more mandatory fields are missing.'
